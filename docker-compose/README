We'll first create a docker-compose.yaml file to run the jenkins container.

1. Spin up the jenkins container with: "docker compose up -d"
2. Access Jenkins:
    - Open your browser and go to http://localhost:8080.
    -   Enter the admin password with: "docker exec -it jenkins_cont cat /var/jenkins_home/secrets/initialAdminPassword"
3. Install Necessary Plugins:
    - Go to Manage Jenkins > Plugins and install:
        Docker Pipeline
        GitHub Integration Plugin
    - Kubernetes Plugin
4. Set Up Jenkins Agent Nodes:
    - Add agent nodes (other machines or containers) so Jenkins can distribute work across them.
    FYI:
*. I ran the jenkins pipelines all in a workspace in my VM host that is hosting the jenkins container on top of it.
*. I had to add the node to the node manager in the jenkins server (you can follow easily by adding the instance's IP, authontication methid " I used the simple username and password "NO NEED TO COMPLICATE THINGS")
*. However, I still had to encounter issues with the java compatibility in the jenkins container, so I had to change the java version in the Dockerfile to 8.0.362-amzn which is compatible with the jenkins container (long story short, my VM ran java 11 and the jenkins container ran java 17 so take notice of this)
*. Make sure to set up the SSH keys for the VM correctly on the jenkins container under the known_hosts file.
